{"ast":null,"code":"var _jsxFileName = \"/Users/martinzimmer/github/ohregano-website/components/container/SectionContainer.js\";\nvar __jsx = React.createElement;\nimport React, { useRef } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport { InView } from 'react-intersection-observer';\nimport { motion } from \"framer-motion\";\n\nfunction SectionContainer(props) {\n  /* const [ref, inView, entry] = useInView({\n     threshold: 0.2,\n     triggerOnce: true,\n     delay: 0.3\n   }) */\n  const variants = {\n    initial: {},\n    enter: {\n      transition: {\n        staggerChildren: 0.12\n      }\n    },\n    exit: {}\n  };\n  const [inView, setInView] = React.useState(false);\n  return __jsx(\"div\", {\n    inView: inView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(InView, {\n    onChange: setInView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, ({\n    ref,\n    inView\n  }) => __jsx(motion.div, {\n    ref: ref,\n    variants: variants,\n    initial: \"exit\",\n    animate: inView ? \"enter\" : \"exit\",\n    exit: \"exit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }\n  }, props.children)));\n}\n\nexport default SectionContainer;","map":{"version":3,"sources":["/Users/martinzimmer/github/ohregano-website/components/container/SectionContainer.js"],"names":["React","useRef","useInView","InView","motion","SectionContainer","props","variants","initial","enter","transition","staggerChildren","exit","inView","setInView","useState","ref","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAEA,SAASC,gBAAT,CAA2BC,KAA3B,EAAkC;AAEjC;;;;;AAME,QAAMC,QAAQ,GAAG;AAChBC,IAAAA,OAAO,EAAE,EADO;AAGhBC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB;AAAd,KAHS;AAKhBC,IAAAA,IAAI,EAAE;AALU,GAAjB;AASD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,KAAK,CAACe,QAAN,CAAe,KAAf,CAA5B;AAEA,SACE;AAAK,IAAA,MAAM,EAAEF,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEE,IAAAA,GAAF;AAAOH,IAAAA;AAAP,GAAD,KACK,MAAC,MAAD,CAAQ,GAAR;AACA,IAAA,GAAG,EAAEG,GADL;AAEA,IAAA,QAAQ,EAAET,QAFV;AAGA,IAAA,OAAO,EAAC,MAHR;AAIA,IAAA,OAAO,EAAEM,MAAM,GAAG,OAAH,GAAa,MAJ5B;AAKA,IAAA,IAAI,EAAC,MALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMCP,KAAK,CAACW,QANP,CAFR,CADN,CADF;AAgBD;;AACD,eAAeZ,gBAAf","sourcesContent":["import React, { useRef } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport { InView } from 'react-intersection-observer'\nimport { motion } from \"framer-motion\";\n\nfunction SectionContainer (props) {\n\n /* const [ref, inView, entry] = useInView({\n    threshold: 0.2,\n    triggerOnce: true,\n    delay: 0.3\n  }) */\n\n   const variants = {\n    initial: {\n    },\n    enter: { transition: { staggerChildren: 0.12 }\n    },\n    exit: {\n    }\n  }; \n\n  const [inView, setInView] = React.useState(false)\n\n  return (\n    <div inView={inView}>\n          <InView onChange={setInView}>\n            {({ ref, inView }) => (\n                  <motion.div\n                  ref={ref}\n                  variants={variants}\n                  initial=\"exit\"\n                  animate={inView ? \"enter\" : \"exit\"}\n                  exit=\"exit\" >\n                  {props.children}\n                  </motion.div>\n            )}\n          </InView>\n    </div>\n  );\n}\nexport default SectionContainer;\n"]},"metadata":{},"sourceType":"module"}