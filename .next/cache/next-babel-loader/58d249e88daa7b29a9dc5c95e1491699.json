{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/martinzimmer/github/ohregano-website/sections/rueckschau/SliderElement.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from './SliderElement.module.css';\nimport { motion } from 'framer-motion';\nimport { useState, useEffect } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport useWindowSize from '../hooks/useWindowSize.js';\nexport default function SliderElement(props) {\n  _s();\n\n  var _useInView = useInView({\n    threshold: 0.1,\n    triggerOnce: true,\n    delay: 0.1\n  }),\n      _useInView2 = _slicedToArray(_useInView, 3),\n      ref = _useInView2[0],\n      inView = _useInView2[1],\n      entry = _useInView2[2];\n\n  var onClick = function onClick() {\n    props.setFocusedElement(props.dataElement.id);\n    props.onClickHandler();\n  };\n\n  var variants = {\n    basic: {\n      enter: {\n        x: 0,\n        opacity: 1,\n        zIndex: 30\n      },\n      exit: {\n        x: 150,\n        opacity: 0,\n        zIndex: 20\n      }\n    },\n    frame: {\n      enter: {\n        border: \"2px solid rgba(255,255,255,1)\",\n        padding: \"20px\"\n      },\n      exit: {\n        border: \"2px solid rgba(0,0,0,0)\",\n        padding: \"0px\"\n      }\n    }\n  };\n  var bool = props.isFocused == props.dataElement.id;\n  return __jsx(motion.div, {\n    ref: ref,\n    animate: inView ? \"enter\" : \"exit\",\n    initial: \"exit\",\n    variants: variants.basic,\n    transition: {\n      ease: \"easeInOut\",\n      duration: 0.4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(motion.div, {\n    animate: bool ? \"enter\" : \"exit\",\n    variants: variants.frame,\n    onClick: props.isDragging == false ? onClick : null,\n    onMouseEnter: function onMouseEnter() {\n      return props.setFocusedElement(props.dataElement.id);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return props.setFocusedElement(-1);\n    },\n    className: styles.slide_element,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    onClick: props.isDragging == false ? onClick : null,\n    draggable: \"false\",\n    className: styles.cover,\n    src: props.dataElement.img,\n    alt: \"Cover Img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(SliderElement, \"xcNnOkK/eOBEx/AJ1BTvf70kBfM=\", false, function () {\n  return [useInView];\n});\n\n_c = SliderElement;\n\nvar _c;\n\n$RefreshReg$(_c, \"SliderElement\");","map":{"version":3,"sources":["/Users/martinzimmer/github/ohregano-website/sections/rueckschau/SliderElement.js"],"names":["styles","motion","useState","useEffect","useInView","useWindowSize","SliderElement","props","threshold","triggerOnce","delay","ref","inView","entry","onClick","setFocusedElement","dataElement","id","onClickHandler","variants","basic","enter","x","opacity","zIndex","exit","frame","border","padding","bool","isFocused","ease","duration","isDragging","slide_element","cover","img"],"mappings":"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","sourcesContent":["import styles from './SliderElement.module.css'\nimport { motion } from 'framer-motion'\nimport { useState, useEffect } from 'react'\nimport { useInView } from 'react-intersection-observer';\nimport useWindowSize from '../hooks/useWindowSize.js'\n\nexport default function SliderElement(props) {\n\n    const [ref, inView, entry] = useInView({\n      threshold: 0.1,\n      triggerOnce: true,\n      delay: 0.1\n    })\n\n    const onClick = () => {\n        props.setFocusedElement(props.dataElement.id);\n        props.onClickHandler();\n    }\n\n    const variants = {\n        basic: {\n          enter: { x: 0, opacity: 1, zIndex: 30 },\n          exit: { x: 150, opacity: 0, zIndex: 20 }\n        },\n        frame: {\n            enter: { border: \"2px solid rgba(255,255,255,1)\", padding: \"20px\" },\n            exit: { border: \"2px solid rgba(0,0,0,0)\", padding: \"0px\" }\n          },\n      };\n\n    let bool = props.isFocused == props.dataElement.id;\n\n  return (\n    <motion.div ref={ref}\n    animate={inView ? \"enter\" : \"exit\"}\n    initial=\"exit\"\n    variants={variants.basic} transition={{ ease: \"easeInOut\", duration: 0.4 }}>\n        <motion.div animate={bool ? \"enter\" : \"exit\"} variants={variants.frame} onClick={props.isDragging == false ? onClick : null} onMouseEnter={() => props.setFocusedElement(props.dataElement.id)} onMouseLeave={() => props.setFocusedElement(-1)} className={styles.slide_element}>\n        <img onClick={props.isDragging == false ? onClick : null} draggable=\"false\" className={styles.cover} src={props.dataElement.img} alt=\"Cover Img\" />\n        </motion.div>\n    </motion.div>\n  )\n}"]},"metadata":{},"sourceType":"module"}