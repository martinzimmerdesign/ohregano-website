{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/martinzimmer/github/ohregano-website/sections/rueckschau/SliderElement.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from './SliderElement.module.css';\nimport { motion } from 'framer-motion';\nimport { useState, useEffect } from 'react';\nimport { useInView } from 'react-intersection-observer';\nexport default function SliderElement(props) {\n  _s();\n\n  var _jsx;\n\n  var _useInView = useInView({\n    threshold: 0.2,\n    triggerOnce: true,\n    delay: 0.3\n  }),\n      _useInView2 = _slicedToArray(_useInView, 3),\n      ref = _useInView2[0],\n      inView = _useInView2[1],\n      entry = _useInView2[2];\n\n  var onClick = function onClick() {\n    console.log(\"Wird geklickt\");\n    props.setFocusedElement(props.dataElement.id);\n    props.onClickHandler();\n  };\n\n  var variants = {\n    basic: {\n      enter: {\n        y: 0,\n        opacity: 1\n      },\n      exit: {\n        y: 50,\n        opacity: 0\n      }\n    },\n    frame: {\n      enter: {\n        border: \"2px solid rgba(255,255,255,1)\",\n        padding: \"20px\"\n      },\n      exit: {\n        border: \"2px solid rgba(0,0,0,0)\",\n        padding: \"0px\"\n      }\n    }\n  };\n  var bool = props.isFocused == props.dataElement.id;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(motion.div, (_jsx = {\n    ref: ref,\n    animate: inView ? \"enter\" : \"exit\",\n    initial: \"exit\",\n    variants: variants\n  }, _defineProperty(_jsx, \"animate\", bool ? \"enter\" : \"exit\"), _defineProperty(_jsx, \"variants\", variants.frame), _defineProperty(_jsx, \"onClick\", props.isDragging == false ? onClick : null), _defineProperty(_jsx, \"onMouseEnter\", function onMouseEnter() {\n    return props.setFocusedElement(props.dataElement.id);\n  }), _defineProperty(_jsx, \"onMouseLeave\", function onMouseLeave() {\n    return props.setFocusedElement(-1);\n  }), _defineProperty(_jsx, \"className\", styles.slide_element), _defineProperty(_jsx, \"__self\", this), _defineProperty(_jsx, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }), _jsx), __jsx(\"img\", {\n    onClick: props.isDragging == false ? onClick : null,\n    draggable: \"false\",\n    className: styles.cover,\n    src: props.dataElement.img,\n    alt: \"Cover Img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(SliderElement, \"xcNnOkK/eOBEx/AJ1BTvf70kBfM=\", false, function () {\n  return [useInView];\n});\n\n_c = SliderElement;\n\nvar _c;\n\n$RefreshReg$(_c, \"SliderElement\");","map":{"version":3,"sources":["/Users/martinzimmer/github/ohregano-website/sections/rueckschau/SliderElement.js"],"names":["styles","motion","useState","useEffect","useInView","SliderElement","props","threshold","triggerOnce","delay","ref","inView","entry","onClick","console","log","setFocusedElement","dataElement","id","onClickHandler","variants","basic","enter","y","opacity","exit","frame","border","padding","bool","isFocused","isDragging","slide_element","cover","img"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAAA;;AAAA,mBAEZF,SAAS,CAAC;AACrCG,IAAAA,SAAS,EAAE,GAD0B;AAErCC,IAAAA,WAAW,EAAE,IAFwB;AAGrCC,IAAAA,KAAK,EAAE;AAH8B,GAAD,CAFG;AAAA;AAAA,MAElCC,GAFkC;AAAA,MAE7BC,MAF6B;AAAA,MAErBC,KAFqB;;AAQzC,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAT,IAAAA,KAAK,CAACU,iBAAN,CAAwBV,KAAK,CAACW,WAAN,CAAkBC,EAA1C;AACAZ,IAAAA,KAAK,CAACa,cAAN;AACH,GAJD;;AAMA,MAAMC,QAAQ,GAAG;AACbC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE;AAAjB,OADF;AAELC,MAAAA,IAAI,EAAE;AAAEF,QAAAA,CAAC,EAAE,EAAL;AAASC,QAAAA,OAAO,EAAE;AAAlB;AAFD,KADM;AAKbE,IAAAA,KAAK,EAAE;AACHJ,MAAAA,KAAK,EAAE;AAAEK,QAAAA,MAAM,EAAE,+BAAV;AAA2CC,QAAAA,OAAO,EAAE;AAApD,OADJ;AAEHH,MAAAA,IAAI,EAAE;AAAEE,QAAAA,MAAM,EAAE,yBAAV;AAAqCC,QAAAA,OAAO,EAAE;AAA9C;AAFH;AALM,GAAjB;AAWA,MAAIC,IAAI,GAAGvB,KAAK,CAACwB,SAAN,IAAmBxB,KAAK,CAACW,WAAN,CAAkBC,EAAhD;AAEF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,GAAG,EAAER,GAAjB;AACJ,IAAA,OAAO,EAAEC,MAAM,GAAG,OAAH,GAAa,MADxB;AAEJ,IAAA,OAAO,EAAC,MAFJ;AAGJ,IAAA,QAAQ,EAAES;AAHN,sCAGyBS,IAAI,GAAG,OAAH,GAAa,MAH1C,qCAG4DT,QAAQ,CAACM,KAHrE,oCAGqFpB,KAAK,CAACyB,UAAN,IAAoB,KAApB,GAA4BlB,OAA5B,GAAsC,IAH3H,yCAG+I;AAAA,WAAMP,KAAK,CAACU,iBAAN,CAAwBV,KAAK,CAACW,WAAN,CAAkBC,EAA1C,CAAN;AAAA,GAH/I,yCAGkN;AAAA,WAAMZ,KAAK,CAACU,iBAAN,CAAwB,CAAC,CAAzB,CAAN;AAAA,GAHlN,sCAGgQhB,MAAM,CAACgC,aAHvQ;AAAA;AAAA;AAAA;AAAA,aAIA;AAAK,IAAA,OAAO,EAAE1B,KAAK,CAACyB,UAAN,IAAoB,KAApB,GAA4BlB,OAA5B,GAAsC,IAApD;AAA0D,IAAA,SAAS,EAAC,OAApE;AAA4E,IAAA,SAAS,EAAEb,MAAM,CAACiC,KAA9F;AAAqG,IAAA,GAAG,EAAE3B,KAAK,CAACW,WAAN,CAAkBiB,GAA5H;AAAiI,IAAA,GAAG,EAAC,WAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CADJ,CADF;AAUD;;GArCuB7B,a;UAESD,S;;;KAFTC,a","sourcesContent":["import styles from './SliderElement.module.css'\nimport { motion } from 'framer-motion'\nimport { useState, useEffect } from 'react'\nimport { useInView } from 'react-intersection-observer';\n\nexport default function SliderElement(props) {\n\n    const [ref, inView, entry] = useInView({\n      threshold: 0.2,\n      triggerOnce: true,\n      delay: 0.3\n    })\n\n    const onClick = () => {\n        console.log(\"Wird geklickt\");\n        props.setFocusedElement(props.dataElement.id);\n        props.onClickHandler();\n    }\n\n    const variants = {\n        basic: {\n          enter: { y: 0, opacity: 1 },\n          exit: { y: 50, opacity: 0 }\n        },\n        frame: {\n            enter: { border: \"2px solid rgba(255,255,255,1)\", padding: \"20px\" },\n            exit: { border: \"2px solid rgba(0,0,0,0)\", padding: \"0px\" }\n          },\n      };\n\n    let bool = props.isFocused == props.dataElement.id;\n\n  return (\n    <div>\n        <motion.div ref={ref}\n    animate={inView ? \"enter\" : \"exit\"}\n    initial=\"exit\"\n    variants={variants} animate={bool ? \"enter\" : \"exit\"} variants={variants.frame} onClick={props.isDragging == false ? onClick : null} onMouseEnter={() => props.setFocusedElement(props.dataElement.id)} onMouseLeave={() => props.setFocusedElement(-1)} className={styles.slide_element}>\n        <img onClick={props.isDragging == false ? onClick : null} draggable=\"false\" className={styles.cover} src={props.dataElement.img} alt=\"Cover Img\" />\n        </motion.div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}