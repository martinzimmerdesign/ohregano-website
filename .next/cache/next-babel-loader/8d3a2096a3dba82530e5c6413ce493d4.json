{"ast":null,"code":"var _jsxFileName = \"/Users/martinzimmer/github/ohregano-website/sections/rueckschau/SliderElement.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from './SliderElement.module.css';\nimport { motion } from 'framer-motion';\nimport { useState, useEffect } from 'react';\nexport default function SliderElement(props) {\n  var onClick = function onClick() {\n    console.log(\"run\");\n    props.setFocusedElement(props.dataElement.id);\n    props.onClickHandler();\n  };\n\n  var variants = {\n    basic: {\n      enter: {\n        y: 0,\n        opacity: 1\n      },\n      exit: {\n        y: 50,\n        opacity: 0\n      }\n    },\n    frame: {\n      enter: {\n        border: \"2px solid rgba(255,255,255,1)\",\n        padding: 20\n      },\n      exit: {\n        border: \"2px solid rgba(0,0,0,0)\",\n        padding: 0\n      }\n    }\n  };\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(motion.div, {\n    animate: props.isFocused == props.dataElement.id ? \"enter\" : \"exit\",\n    variants: variants.frame,\n    onClick: props.isDragging == false ? onClick : null,\n    onMouseEnter: function onMouseEnter() {\n      return props.setFocusedElement(props.dataElement.id);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return props.setFocusedElement(-1);\n    },\n    className: styles.slide_element,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    draggable: \"false\",\n    className: styles.cover,\n    src: props.dataElement.img,\n    alt: \"Cover Img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })));\n}\n_c = SliderElement;\n\nvar _c;\n\n$RefreshReg$(_c, \"SliderElement\");","map":{"version":3,"sources":["/Users/martinzimmer/github/ohregano-website/sections/rueckschau/SliderElement.js"],"names":["styles","motion","useState","useEffect","SliderElement","props","onClick","console","log","setFocusedElement","dataElement","id","onClickHandler","variants","basic","enter","y","opacity","exit","frame","border","padding","isFocused","isDragging","slide_element","cover","img"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAEzC,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAH,IAAAA,KAAK,CAACI,iBAAN,CAAwBJ,KAAK,CAACK,WAAN,CAAkBC,EAA1C;AACAN,IAAAA,KAAK,CAACO,cAAN;AACH,GAJD;;AAMA,MAAMC,QAAQ,GAAG;AACbC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE;AAAjB,OADF;AAELC,MAAAA,IAAI,EAAE;AAAEF,QAAAA,CAAC,EAAE,EAAL;AAASC,QAAAA,OAAO,EAAE;AAAlB;AAFD,KADM;AAKbE,IAAAA,KAAK,EAAE;AACHJ,MAAAA,KAAK,EAAE;AAAEK,QAAAA,MAAM,EAAE,+BAAV;AAA2CC,QAAAA,OAAO,EAAE;AAApD,OADJ;AAEHH,MAAAA,IAAI,EAAE;AAAEE,QAAAA,MAAM,EAAE,yBAAV;AAAqCC,QAAAA,OAAO,EAAE;AAA9C;AAFH;AALM,GAAjB;AAWF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD,CAAQ,GAAR;AAAY,IAAA,OAAO,EAAEhB,KAAK,CAACiB,SAAN,IAAmBjB,KAAK,CAACK,WAAN,CAAkBC,EAArC,GAA0C,OAA1C,GAAoD,MAAzE;AAAiF,IAAA,QAAQ,EAAEE,QAAQ,CAACM,KAApG;AAA2G,IAAA,OAAO,EAAEd,KAAK,CAACkB,UAAN,IAAoB,KAApB,GAA4BjB,OAA5B,GAAsC,IAA1J;AAAgK,IAAA,YAAY,EAAE;AAAA,aAAMD,KAAK,CAACI,iBAAN,CAAwBJ,KAAK,CAACK,WAAN,CAAkBC,EAA1C,CAAN;AAAA,KAA9K;AAAmO,IAAA,YAAY,EAAE;AAAA,aAAMN,KAAK,CAACI,iBAAN,CAAwB,CAAC,CAAzB,CAAN;AAAA,KAAjP;AAAoR,IAAA,SAAS,EAAET,MAAM,CAACwB,aAAtS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,SAAS,EAAExB,MAAM,CAACyB,KAAzC;AAAgD,IAAA,GAAG,EAAEpB,KAAK,CAACK,WAAN,CAAkBgB,GAAvE;AAA4E,IAAA,GAAG,EAAC,WAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ,CADF;AAOD;KA1BuBtB,a","sourcesContent":["import styles from './SliderElement.module.css'\nimport { motion } from 'framer-motion'\nimport { useState, useEffect } from 'react'\n\nexport default function SliderElement(props) {\n\n    const onClick = () => {\n        console.log(\"run\")\n        props.setFocusedElement(props.dataElement.id);\n        props.onClickHandler();\n    }\n\n    const variants = {\n        basic: {\n          enter: { y: 0, opacity: 1 },\n          exit: { y: 50, opacity: 0 }\n        },\n        frame: {\n            enter: { border: \"2px solid rgba(255,255,255,1)\", padding: 20 },\n            exit: { border: \"2px solid rgba(0,0,0,0)\", padding: 0 }\n          },\n      };\n\n  return (\n    <div>\n        <motion.div animate={props.isFocused == props.dataElement.id ? \"enter\" : \"exit\"} variants={variants.frame} onClick={props.isDragging == false ? onClick : null} onMouseEnter={() => props.setFocusedElement(props.dataElement.id)} onMouseLeave={() => props.setFocusedElement(-1)} className={styles.slide_element}>\n        <img draggable=\"false\" className={styles.cover} src={props.dataElement.img} alt=\"Cover Img\" />\n        </motion.div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}