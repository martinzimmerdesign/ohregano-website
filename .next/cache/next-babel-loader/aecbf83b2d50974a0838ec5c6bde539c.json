{"ast":null,"code":"var _jsxFileName = \"/Users/martinzimmer/github/ohregano-website/sections/rueckschau/SliderElement.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from './Slider.module.css';\nimport { motion } from 'framer-motion';\nexport default function Paragraph(props) {\n  const [isToggled, setToggled] = useState(false);\n\n  const toggleTrueFalse = () => setToggled(!isToggled);\n\n  const variants = {\n    content: {\n      open: {\n        y: 0,\n        opacity: 1,\n        zIndex: 400\n      },\n      closed: {\n        y: \"100vh\",\n        opacity: 0,\n        zIndex: 400,\n        transition: {\n          when: \"afterChildren\"\n        }\n      }\n    }\n  };\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(motion.h1, {\n    variants: variants.basic,\n    className: sectionTitle ? styles.section_title : styles.paragraph_title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, title), __jsx(motion.p, {\n    variants: variants.basic,\n    className: styles.paragraph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, text));\n}","map":{"version":3,"sources":["/Users/martinzimmer/github/ohregano-website/sections/rueckschau/SliderElement.js"],"names":["styles","motion","Paragraph","props","isToggled","setToggled","useState","toggleTrueFalse","variants","content","open","y","opacity","zIndex","closed","transition","when","basic","sectionTitle","section_title","paragraph_title","title","paragraph","text"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,SAASC,MAAT,QAAuB,eAAvB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAErC,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BC,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMC,eAAe,GAAG,MAAMF,UAAU,CAAC,CAACD,SAAF,CAAxC;;AAEA,QAAMI,QAAQ,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,OAAO,EAAE,CAAjB;AAAoBC,QAAAA,MAAM,EAAE;AAA5B,OADC;AAEPC,MAAAA,MAAM,EAAE;AAAEH,QAAAA,CAAC,EAAE,OAAL;AAAcC,QAAAA,OAAO,EAAE,CAAvB;AAA0BC,QAAAA,MAAM,EAAE,GAAlC;AAAuCE,QAAAA,UAAU,EAAE;AACzDC,UAAAA,IAAI,EAAE;AADmD;AAAnD;AAFD;AADI,GAAjB;AASF,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD,CAAQ,EAAR;AAAW,IAAA,QAAQ,EAAER,QAAQ,CAACS,KAA9B;AAAqC,IAAA,SAAS,EAAEC,YAAY,GAAGlB,MAAM,CAACmB,aAAV,GAA0BnB,MAAM,CAACoB,eAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+GC,KAA/G,CADF,EAEE,MAAC,MAAD,CAAQ,CAAR;AAAU,IAAA,QAAQ,EAAEb,QAAQ,CAACS,KAA7B;AAAoC,IAAA,SAAS,EAAEjB,MAAM,CAACsB,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkEC,IAAlE,CAFF,CADJ;AAMD","sourcesContent":["import styles from './Slider.module.css'\nimport { motion } from 'framer-motion'\n\nexport default function Paragraph(props) {\n\n    const [isToggled, setToggled] = useState(false);\n    const toggleTrueFalse = () => setToggled(!isToggled);\n\n    const variants = {\n        content: {\n          open: { y: 0, opacity: 1, zIndex: 400},\n          closed: { y: \"100vh\", opacity: 0, zIndex: 400, transition: {\n            when: \"afterChildren\",\n          }, },\n        }\n      }\n\n  return (\n      <div>\n        <motion.h1 variants={variants.basic} className={sectionTitle ? styles.section_title : styles.paragraph_title}>{title}</motion.h1>\n        <motion.p variants={variants.basic} className={styles.paragraph}>{text}</motion.p>\n      </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}