{"ast":null,"code":"var _jsxFileName = \"/Users/martinzimmer/github/ohregano-website/sections/rueckschau/Slider.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport styles from './Slider.module.css';\nimport { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport SliderElement from './SliderElement.js';\nimport rueckschau_data from './RueckschauData.js';\nimport Draggable from 'react-draggable';\nexport default function Slider() {\n  // Welcher/es Dot/Plakat wird gerade fokussiert?\n  const {\n    0: isFocused,\n    1: setFocusedElement\n  } = useState(0); // Wurde ein Dot geklickt?\n\n  const {\n    0: wasDotClicked,\n    1: setWasDotClicked\n  } = useState(false); // Wird gerade gedraggt?\n\n  const {\n    0: isDragging,\n    1: setIsDragging\n  } = useState(false); // Bild oder Dot geklickt\n\n  const {\n    0: wasClicked,\n    1: setWasClicked\n  } = useState(0); // Detail Ansicht\n\n  const {\n    0: isToggled,\n    1: setToggled\n  } = useState(false);\n\n  const onClickHandler = () => {\n    setToggled(true);\n    setWasClicked(isFocused);\n  };\n\n  const resetDot = () => {\n    setFocusedElement(0);\n    setWasDotClicked(false);\n  };\n\n  const resetDragState = () => {\n    setTimeout(function () {\n      setIsDragging(false);\n    }, 2000);\n  };\n\n  const variants = {\n    content: {\n      open: {\n        opacity: 1,\n        zIndex: 400\n      },\n      closed: {\n        opacity: 0,\n        zIndex: -100,\n        transition: {\n          when: \"afterChildren\"\n        }\n      }\n    }\n  };\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.time_slider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.line,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, rueckschau_data.map(dataElement => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    key: dataElement.id,\n    onClick: onClickHandler,\n    className: styles.dot,\n    onMouseEnter: () => setFocusedElement(dataElement.id),\n    onMouseLeave: resetDot,\n    style: {\n      backgroundColor: isFocused == dataElement.id ? \"red\" : \"seagreen\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, isFocused == dataElement.id ? dataElement.year : \"\")))), __jsx(\"div\", {\n    className: styles.values_bottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: styles.left_value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Jetzt\"), __jsx(\"p\", {\n    className: styles.right_value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"1990\"))), __jsx(\"div\", {\n    className: styles.img_slider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(Draggable, {\n    axis: \"x\",\n    handle: \".handle\",\n    defaultPosition: {\n      x: 0,\n      y: 0\n    },\n    position: null,\n    grid: [25, 25],\n    onDrag: () => setIsDragging(true),\n    onStop: resetDragState,\n    scale: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, rueckschau_data.map(dataElement => __jsx(\"div\", {\n    onClick: isDragging == false ? onClickHandler : null,\n    className: \"handle\",\n    style: {\n      display: \"inline-flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, __jsx(SliderElement, {\n    key: dataElement.id,\n    id: dataElement.id,\n    onClickHandler: onClickHandler,\n    isFocused: isFocused,\n    setFocusedElement: setFocusedElement,\n    isDragging: isDragging,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }))))), __jsx(motion.div, {\n    initial: \"closed\",\n    animate: isToggled ? \"open\" : \"closed\",\n    transition: {\n      ease: \"easeInOut\",\n      duration: 0.2\n    },\n    variants: variants.content,\n    className: styles.detailView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, rueckschau_data[wasClicked].id), __jsx(\"p\", {\n    onClick: () => setToggled(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"close\"))));\n}","map":{"version":3,"sources":["/Users/martinzimmer/github/ohregano-website/sections/rueckschau/Slider.js"],"names":["Head","styles","useState","useEffect","motion","SliderElement","rueckschau_data","Draggable","Slider","isFocused","setFocusedElement","wasDotClicked","setWasDotClicked","isDragging","setIsDragging","wasClicked","setWasClicked","isToggled","setToggled","onClickHandler","resetDot","resetDragState","setTimeout","variants","content","open","opacity","zIndex","closed","transition","when","time_slider","line","map","dataElement","id","dot","backgroundColor","year","values_bottom","left_value","right_value","img_slider","x","y","display","height","ease","duration","detailView"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport styles from './Slider.module.css'\nimport { useState, useEffect } from 'react'\nimport { motion } from 'framer-motion'\nimport SliderElement from './SliderElement.js';\nimport rueckschau_data from './RueckschauData.js';\nimport Draggable from 'react-draggable';\n\nexport default function Slider() {\n\n  // Welcher/es Dot/Plakat wird gerade fokussiert?\n  const [isFocused, setFocusedElement] = useState(0);\n  // Wurde ein Dot geklickt?\n  const [wasDotClicked, setWasDotClicked] = useState(false);\n  // Wird gerade gedraggt?\n  const [isDragging, setIsDragging] = useState(false);\n  // Bild oder Dot geklickt\n  const [wasClicked, setWasClicked] = useState(0);\n  // Detail Ansicht\n  const [isToggled, setToggled] = useState(false);\n\n  const onClickHandler = () => {\n    setToggled(true);\n    setWasClicked(isFocused);\n  }\n\n  const resetDot = () => {\n    setFocusedElement(0);\n    setWasDotClicked(false);\n  }\n\n  const resetDragState = () => {\n    setTimeout(function() {\n      setIsDragging(false)\n    }, 2000);\n  }\n\n  const variants = {\n    content: {\n      open: { opacity: 1, zIndex: 400},\n      closed: { opacity: 0, zIndex: -100, transition: {\n        when: \"afterChildren\",\n      }, },\n    }\n  }\n\n  return (\n    <div>\n        <div className={styles.time_slider}>\n          <div className={styles.line}>\n            {/* Mappen einen Dot für jedes Plakat */}\n            {rueckschau_data.map((dataElement) =>\n            <div>\n              <div key={dataElement.id} onClick={onClickHandler} className={styles.dot} onMouseEnter={() => setFocusedElement(dataElement.id)} onMouseLeave={resetDot} style={{backgroundColor: isFocused == dataElement.id ? \"red\" : \"seagreen\"}}></div>\n              <p>{isFocused == dataElement.id ? dataElement.year : \"\"}</p>\n            </div>\n            )}\n          </div>\n          <div className={styles.values_bottom}>\n            <p className={styles.left_value}>Jetzt</p>\n            <p className={styles.right_value}>1990</p>\n          </div>\n\n        </div>\n        <div className={styles.img_slider}>\n          <Draggable\n          axis=\"x\"\n          handle=\".handle\"\n          defaultPosition={{x: 0, y: 0}}\n          position={null}\n          grid={[25, 25]}\n          onDrag={() => setIsDragging(true)}\n          onStop={resetDragState}\n          scale={1}>\n            <div style={{display: \"flex\", height: \"100%\"}}>\n              {/* Mappen für jedes Plakat das Bild im Slider, sowie die Detail-Ansicht (lazy) */}\n              {rueckschau_data.map((dataElement) =>\n                  <div onClick={isDragging == false ? onClickHandler : null} className=\"handle\" style={{display: \"inline-flex\"}}>\n                    <SliderElement key={dataElement.id} id={dataElement.id} onClickHandler={onClickHandler} isFocused={isFocused} setFocusedElement={setFocusedElement} isDragging={isDragging}/>\n                  </div>\n              )}\n            </div> \n          </Draggable>\n          <motion.div initial=\"closed\" animate={isToggled ? \"open\" : \"closed\"} transition={{ ease: \"easeInOut\", duration: 0.2 }} variants={variants.content} className={styles.detailView}>\n            <p>{rueckschau_data[wasClicked].id}</p>\n            <p onClick={() => setToggled(false)}>close</p>\n          </motion.div>\n        </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}