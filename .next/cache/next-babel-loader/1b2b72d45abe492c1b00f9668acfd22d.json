{"ast":null,"code":"var _jsxFileName = \"/Users/martinzimmer/github/ohregano-website/components/container/SectionContainer.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport { motion } from \"framer-motion\";\n\nfunction SectionContainer(props) {\n  let thres = props.threshold;\n  console.log(thres);\n  const [ref, inView, entry] = useInView({\n    threshold: thres === undefined ? thres : 0.16,\n    triggerOnce: true,\n    delay: 0.3\n  });\n  const variants = {\n    initial: {},\n    enter: {\n      transition: {\n        staggerChildren: 0.12\n      }\n    },\n    exit: {},\n    hover: {},\n    tap: {}\n  };\n  return __jsx(motion.div, {\n    ref: ref,\n    animate: inView ? \"enter\" : \"exit\",\n    initial: \"exit\",\n    variants: variants,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, props.children));\n}\n\nexport default SectionContainer;","map":{"version":3,"sources":["/Users/martinzimmer/github/ohregano-website/components/container/SectionContainer.js"],"names":["React","useRef","useEffect","useState","useInView","motion","SectionContainer","props","thres","threshold","console","log","ref","inView","entry","undefined","triggerOnce","delay","variants","initial","enter","transition","staggerChildren","exit","hover","tap","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,MAAT,QAAuB,eAAvB;;AAEA,SAASC,gBAAT,CAA2BC,KAA3B,EAAkC;AAE9B,MAAIC,KAAK,GAAGD,KAAK,CAACE,SAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,QAAM,CAACI,GAAD,EAAMC,MAAN,EAAcC,KAAd,IAAuBV,SAAS,CAAC;AACrCK,IAAAA,SAAS,EAAED,KAAK,KAAKO,SAAV,GAAsBP,KAAtB,GAA8B,IADJ;AAErCQ,IAAAA,WAAW,EAAE,IAFwB;AAGrCC,IAAAA,KAAK,EAAE;AAH8B,GAAD,CAAtC;AAMD,QAAMC,QAAQ,GAAG;AAChBC,IAAAA,OAAO,EAAE,EADO;AAGhBC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,eAAe,EAAE;AAAnB;AAAd,KAHS;AAKhBC,IAAAA,IAAI,EAAE,EALU;AAOhBC,IAAAA,KAAK,EAAE,EAPS;AAQhBC,IAAAA,GAAG,EAAE;AARW,GAAjB;AAWD,SACE,MAAC,MAAD,CAAQ,GAAR;AACA,IAAA,GAAG,EAAEb,GADL;AAEA,IAAA,OAAO,EAAEC,MAAM,GAAG,OAAH,GAAa,MAF5B;AAGA,IAAA,OAAO,EAAC,MAHR;AAIA,IAAA,QAAQ,EAAEK,QAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,KAAK,CAACmB,QADT,CALA,CADF;AAWD;;AACD,eAAepB,gBAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport { motion } from \"framer-motion\";\n\nfunction SectionContainer (props) {\n\n    let thres = props.threshold\n    console.log(thres)\n\n    const [ref, inView, entry] = useInView({\n      threshold: thres === undefined ? thres : 0.16,\n      triggerOnce: true,\n      delay: 0.3\n    })\n\n   const variants = {\n    initial: {\n    },\n    enter: { transition: { staggerChildren: 0.12 }\n    },\n    exit: {\n    },\n    hover: { },\n    tap: { },\n  }; \n\n  return (\n    <motion.div\n    ref={ref}\n    animate={inView ? \"enter\" : \"exit\"}\n    initial=\"exit\"\n    variants={variants}>\n    <div>\n      {props.children}\n      </div>\n    </motion.div>\n  );\n}\nexport default SectionContainer;\n"]},"metadata":{},"sourceType":"module"}